// Code generated by protoc-gen-go. DO NOT EDIT.
// source: service.proto

package permissionproto

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type RequestHeader struct {
	Token                string   `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
	Access               string   `protobuf:"bytes,2,opt,name=access,proto3" json:"access,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RequestHeader) Reset()         { *m = RequestHeader{} }
func (m *RequestHeader) String() string { return proto.CompactTextString(m) }
func (*RequestHeader) ProtoMessage()    {}
func (*RequestHeader) Descriptor() ([]byte, []int) {
	return fileDescriptor_a0b84a42fa06f626, []int{0}
}

func (m *RequestHeader) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RequestHeader.Unmarshal(m, b)
}
func (m *RequestHeader) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RequestHeader.Marshal(b, m, deterministic)
}
func (m *RequestHeader) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RequestHeader.Merge(m, src)
}
func (m *RequestHeader) XXX_Size() int {
	return xxx_messageInfo_RequestHeader.Size(m)
}
func (m *RequestHeader) XXX_DiscardUnknown() {
	xxx_messageInfo_RequestHeader.DiscardUnknown(m)
}

var xxx_messageInfo_RequestHeader proto.InternalMessageInfo

func (m *RequestHeader) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

func (m *RequestHeader) GetAccess() string {
	if m != nil {
		return m.Access
	}
	return ""
}

type ApplicationRequest struct {
	Header               *RequestHeader `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	Name                 string         `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *ApplicationRequest) Reset()         { *m = ApplicationRequest{} }
func (m *ApplicationRequest) String() string { return proto.CompactTextString(m) }
func (*ApplicationRequest) ProtoMessage()    {}
func (*ApplicationRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_a0b84a42fa06f626, []int{1}
}

func (m *ApplicationRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ApplicationRequest.Unmarshal(m, b)
}
func (m *ApplicationRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ApplicationRequest.Marshal(b, m, deterministic)
}
func (m *ApplicationRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ApplicationRequest.Merge(m, src)
}
func (m *ApplicationRequest) XXX_Size() int {
	return xxx_messageInfo_ApplicationRequest.Size(m)
}
func (m *ApplicationRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ApplicationRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ApplicationRequest proto.InternalMessageInfo

func (m *ApplicationRequest) GetHeader() *RequestHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *ApplicationRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type DataRequest struct {
	Header               *RequestHeader `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	Name                 string         `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Id                   int32          `protobuf:"varint,3,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *DataRequest) Reset()         { *m = DataRequest{} }
func (m *DataRequest) String() string { return proto.CompactTextString(m) }
func (*DataRequest) ProtoMessage()    {}
func (*DataRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_a0b84a42fa06f626, []int{2}
}

func (m *DataRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DataRequest.Unmarshal(m, b)
}
func (m *DataRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DataRequest.Marshal(b, m, deterministic)
}
func (m *DataRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DataRequest.Merge(m, src)
}
func (m *DataRequest) XXX_Size() int {
	return xxx_messageInfo_DataRequest.Size(m)
}
func (m *DataRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DataRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DataRequest proto.InternalMessageInfo

func (m *DataRequest) GetHeader() *RequestHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *DataRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *DataRequest) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

type RelatedRecordRequest struct {
	Header               *RequestHeader `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	Name                 string         `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Application          string         `protobuf:"bytes,3,opt,name=application,proto3" json:"application,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *RelatedRecordRequest) Reset()         { *m = RelatedRecordRequest{} }
func (m *RelatedRecordRequest) String() string { return proto.CompactTextString(m) }
func (*RelatedRecordRequest) ProtoMessage()    {}
func (*RelatedRecordRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_a0b84a42fa06f626, []int{3}
}

func (m *RelatedRecordRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RelatedRecordRequest.Unmarshal(m, b)
}
func (m *RelatedRecordRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RelatedRecordRequest.Marshal(b, m, deterministic)
}
func (m *RelatedRecordRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RelatedRecordRequest.Merge(m, src)
}
func (m *RelatedRecordRequest) XXX_Size() int {
	return xxx_messageInfo_RelatedRecordRequest.Size(m)
}
func (m *RelatedRecordRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_RelatedRecordRequest.DiscardUnknown(m)
}

var xxx_messageInfo_RelatedRecordRequest proto.InternalMessageInfo

func (m *RelatedRecordRequest) GetHeader() *RequestHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *RelatedRecordRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *RelatedRecordRequest) GetApplication() string {
	if m != nil {
		return m.Application
	}
	return ""
}

type DashboardRequest struct {
	Header               *RequestHeader `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	Name                 string         `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *DashboardRequest) Reset()         { *m = DashboardRequest{} }
func (m *DashboardRequest) String() string { return proto.CompactTextString(m) }
func (*DashboardRequest) ProtoMessage()    {}
func (*DashboardRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_a0b84a42fa06f626, []int{4}
}

func (m *DashboardRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DashboardRequest.Unmarshal(m, b)
}
func (m *DashboardRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DashboardRequest.Marshal(b, m, deterministic)
}
func (m *DashboardRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DashboardRequest.Merge(m, src)
}
func (m *DashboardRequest) XXX_Size() int {
	return xxx_messageInfo_DashboardRequest.Size(m)
}
func (m *DashboardRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DashboardRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DashboardRequest proto.InternalMessageInfo

func (m *DashboardRequest) GetHeader() *RequestHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *DashboardRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type PermissionResponse struct {
	StatusCode           int32    `protobuf:"varint,1,opt,name=statusCode,proto3" json:"statusCode,omitempty"`
	Message              string   `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PermissionResponse) Reset()         { *m = PermissionResponse{} }
func (m *PermissionResponse) String() string { return proto.CompactTextString(m) }
func (*PermissionResponse) ProtoMessage()    {}
func (*PermissionResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_a0b84a42fa06f626, []int{5}
}

func (m *PermissionResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PermissionResponse.Unmarshal(m, b)
}
func (m *PermissionResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PermissionResponse.Marshal(b, m, deterministic)
}
func (m *PermissionResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PermissionResponse.Merge(m, src)
}
func (m *PermissionResponse) XXX_Size() int {
	return xxx_messageInfo_PermissionResponse.Size(m)
}
func (m *PermissionResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_PermissionResponse.DiscardUnknown(m)
}

var xxx_messageInfo_PermissionResponse proto.InternalMessageInfo

func (m *PermissionResponse) GetStatusCode() int32 {
	if m != nil {
		return m.StatusCode
	}
	return 0
}

func (m *PermissionResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func init() {
	proto.RegisterType((*RequestHeader)(nil), "permissionproto.RequestHeader")
	proto.RegisterType((*ApplicationRequest)(nil), "permissionproto.ApplicationRequest")
	proto.RegisterType((*DataRequest)(nil), "permissionproto.DataRequest")
	proto.RegisterType((*RelatedRecordRequest)(nil), "permissionproto.RelatedRecordRequest")
	proto.RegisterType((*DashboardRequest)(nil), "permissionproto.DashboardRequest")
	proto.RegisterType((*PermissionResponse)(nil), "permissionproto.PermissionResponse")
}

func init() { proto.RegisterFile("service.proto", fileDescriptor_a0b84a42fa06f626) }

var fileDescriptor_a0b84a42fa06f626 = []byte{
	// 364 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xb4, 0x92, 0xc1, 0x4e, 0xf2, 0x40,
	0x10, 0xc7, 0x53, 0xf8, 0xe0, 0x0b, 0x43, 0x50, 0x9c, 0x10, 0xd3, 0xa8, 0x21, 0x58, 0x63, 0xc2,
	0x89, 0x03, 0x26, 0xde, 0x3c, 0x18, 0x38, 0x78, 0x32, 0x66, 0x4d, 0x3c, 0x19, 0xc3, 0xb2, 0x1d,
	0x65, 0x03, 0x74, 0x6b, 0x67, 0xf1, 0x09, 0x7c, 0x5a, 0x9f, 0xc2, 0xb8, 0x14, 0x28, 0x96, 0x03,
	0x07, 0x7b, 0x63, 0x86, 0xdd, 0xdf, 0x6f, 0xa6, 0xfb, 0x87, 0x06, 0x53, 0xf2, 0xa1, 0x15, 0xf5,
	0xe2, 0xc4, 0x58, 0x83, 0x87, 0x31, 0x25, 0x73, 0xcd, 0xac, 0x4d, 0xe4, 0x1a, 0xc1, 0x0d, 0x34,
	0x04, 0xbd, 0x2f, 0x88, 0xed, 0x1d, 0xc9, 0x90, 0x12, 0x6c, 0x41, 0xc5, 0x9a, 0x29, 0x45, 0xbe,
	0xd7, 0xf1, 0xba, 0x35, 0xb1, 0x2c, 0xf0, 0x18, 0xaa, 0x52, 0x29, 0x62, 0xf6, 0x4b, 0xae, 0x9d,
	0x56, 0xc1, 0x08, 0xf0, 0x36, 0x8e, 0x67, 0x5a, 0x49, 0xab, 0x4d, 0x94, 0x92, 0xf0, 0x1a, 0xaa,
	0x13, 0x47, 0x73, 0x90, 0x7a, 0xbf, 0xdd, 0xfb, 0xa5, 0xed, 0x6d, 0x39, 0x45, 0x7a, 0x1a, 0x11,
	0xfe, 0x45, 0x72, 0x4e, 0xa9, 0xc3, 0xfd, 0x0e, 0x34, 0xd4, 0x87, 0xd2, 0xca, 0x02, 0xd0, 0x78,
	0x00, 0x25, 0x1d, 0xfa, 0xe5, 0x8e, 0xd7, 0xad, 0x88, 0x92, 0x0e, 0x83, 0x4f, 0x0f, 0x5a, 0x82,
	0x66, 0xd2, 0x52, 0x28, 0x48, 0x99, 0x24, 0x2c, 0x42, 0xda, 0x81, 0xba, 0xdc, 0x7c, 0x31, 0x67,
	0xaf, 0x89, 0x6c, 0x2b, 0x78, 0x81, 0xe6, 0x50, 0xf2, 0x64, 0x6c, 0x64, 0x21, 0x13, 0x04, 0xf7,
	0x80, 0x0f, 0xeb, 0xcb, 0x82, 0x38, 0x36, 0x11, 0x13, 0xb6, 0x01, 0xd8, 0x4a, 0xbb, 0xe0, 0x81,
	0x09, 0xc9, 0x59, 0x2a, 0x22, 0xd3, 0x41, 0x1f, 0xfe, 0xcf, 0x89, 0x59, 0xbe, 0xad, 0x60, 0xab,
	0xb2, 0xff, 0x55, 0x06, 0xd8, 0x00, 0xf1, 0x19, 0x9a, 0x83, 0x09, 0xa9, 0x69, 0x26, 0x17, 0x78,
	0x91, 0x1b, 0x37, 0x9f, 0x9a, 0x93, 0xfc, 0xa1, 0x1d, 0x63, 0x3e, 0xc1, 0x91, 0xa3, 0x0f, 0x12,
	0x92, 0x96, 0x96, 0xcf, 0x84, 0x67, 0xb9, 0x9b, 0x99, 0xc8, 0xec, 0xc7, 0x1d, 0xc1, 0xa9, 0xe3,
	0x3e, 0xc6, 0xa4, 0xf4, 0xab, 0x56, 0x3f, 0x80, 0xcc, 0x52, 0x7f, 0x62, 0x40, 0x67, 0xd8, 0x4a,
	0x18, 0x5e, 0xee, 0x78, 0xc8, 0x7c, 0x02, 0xf7, 0x33, 0x8c, 0xc1, 0x77, 0x86, 0x75, 0x7a, 0x32,
	0x0b, 0x9c, 0xef, 0x58, 0x60, 0x3b, 0x63, 0x7b, 0x39, 0xc6, 0x55, 0xf7, 0xcf, 0xd5, 0x77, 0x00,
	0x00, 0x00, 0xff, 0xff, 0x13, 0xef, 0x1e, 0x10, 0x58, 0x04, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// PermissionClient is the client API for Permission service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type PermissionClient interface {
	CheckApplication(ctx context.Context, in *ApplicationRequest, opts ...grpc.CallOption) (*PermissionResponse, error)
	CheckCreateRecord(ctx context.Context, in *DataRequest, opts ...grpc.CallOption) (*PermissionResponse, error)
	CheckSpecificDataPermission(ctx context.Context, in *DataRequest, opts ...grpc.CallOption) (*PermissionResponse, error)
	CheckRelatedRecord(ctx context.Context, in *RelatedRecordRequest, opts ...grpc.CallOption) (*PermissionResponse, error)
	CheckDashboardPermission(ctx context.Context, in *DashboardRequest, opts ...grpc.CallOption) (*PermissionResponse, error)
}

type permissionClient struct {
	cc *grpc.ClientConn
}

func NewPermissionClient(cc *grpc.ClientConn) PermissionClient {
	return &permissionClient{cc}
}

func (c *permissionClient) CheckApplication(ctx context.Context, in *ApplicationRequest, opts ...grpc.CallOption) (*PermissionResponse, error) {
	out := new(PermissionResponse)
	err := c.cc.Invoke(ctx, "/permissionproto.Permission/CheckApplication", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *permissionClient) CheckCreateRecord(ctx context.Context, in *DataRequest, opts ...grpc.CallOption) (*PermissionResponse, error) {
	out := new(PermissionResponse)
	err := c.cc.Invoke(ctx, "/permissionproto.Permission/CheckCreateRecord", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *permissionClient) CheckSpecificDataPermission(ctx context.Context, in *DataRequest, opts ...grpc.CallOption) (*PermissionResponse, error) {
	out := new(PermissionResponse)
	err := c.cc.Invoke(ctx, "/permissionproto.Permission/CheckSpecificDataPermission", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *permissionClient) CheckRelatedRecord(ctx context.Context, in *RelatedRecordRequest, opts ...grpc.CallOption) (*PermissionResponse, error) {
	out := new(PermissionResponse)
	err := c.cc.Invoke(ctx, "/permissionproto.Permission/CheckRelatedRecord", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *permissionClient) CheckDashboardPermission(ctx context.Context, in *DashboardRequest, opts ...grpc.CallOption) (*PermissionResponse, error) {
	out := new(PermissionResponse)
	err := c.cc.Invoke(ctx, "/permissionproto.Permission/CheckDashboardPermission", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// PermissionServer is the server API for Permission service.
type PermissionServer interface {
	CheckApplication(context.Context, *ApplicationRequest) (*PermissionResponse, error)
	CheckCreateRecord(context.Context, *DataRequest) (*PermissionResponse, error)
	CheckSpecificDataPermission(context.Context, *DataRequest) (*PermissionResponse, error)
	CheckRelatedRecord(context.Context, *RelatedRecordRequest) (*PermissionResponse, error)
	CheckDashboardPermission(context.Context, *DashboardRequest) (*PermissionResponse, error)
}

// UnimplementedPermissionServer can be embedded to have forward compatible implementations.
type UnimplementedPermissionServer struct {
}

func (*UnimplementedPermissionServer) CheckApplication(ctx context.Context, req *ApplicationRequest) (*PermissionResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CheckApplication not implemented")
}
func (*UnimplementedPermissionServer) CheckCreateRecord(ctx context.Context, req *DataRequest) (*PermissionResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CheckCreateRecord not implemented")
}
func (*UnimplementedPermissionServer) CheckSpecificDataPermission(ctx context.Context, req *DataRequest) (*PermissionResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CheckSpecificDataPermission not implemented")
}
func (*UnimplementedPermissionServer) CheckRelatedRecord(ctx context.Context, req *RelatedRecordRequest) (*PermissionResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CheckRelatedRecord not implemented")
}
func (*UnimplementedPermissionServer) CheckDashboardPermission(ctx context.Context, req *DashboardRequest) (*PermissionResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CheckDashboardPermission not implemented")
}

func RegisterPermissionServer(s *grpc.Server, srv PermissionServer) {
	s.RegisterService(&_Permission_serviceDesc, srv)
}

func _Permission_CheckApplication_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ApplicationRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PermissionServer).CheckApplication(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/permissionproto.Permission/CheckApplication",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PermissionServer).CheckApplication(ctx, req.(*ApplicationRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Permission_CheckCreateRecord_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DataRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PermissionServer).CheckCreateRecord(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/permissionproto.Permission/CheckCreateRecord",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PermissionServer).CheckCreateRecord(ctx, req.(*DataRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Permission_CheckSpecificDataPermission_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DataRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PermissionServer).CheckSpecificDataPermission(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/permissionproto.Permission/CheckSpecificDataPermission",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PermissionServer).CheckSpecificDataPermission(ctx, req.(*DataRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Permission_CheckRelatedRecord_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RelatedRecordRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PermissionServer).CheckRelatedRecord(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/permissionproto.Permission/CheckRelatedRecord",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PermissionServer).CheckRelatedRecord(ctx, req.(*RelatedRecordRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Permission_CheckDashboardPermission_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DashboardRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PermissionServer).CheckDashboardPermission(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/permissionproto.Permission/CheckDashboardPermission",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PermissionServer).CheckDashboardPermission(ctx, req.(*DashboardRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Permission_serviceDesc = grpc.ServiceDesc{
	ServiceName: "permissionproto.Permission",
	HandlerType: (*PermissionServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CheckApplication",
			Handler:    _Permission_CheckApplication_Handler,
		},
		{
			MethodName: "CheckCreateRecord",
			Handler:    _Permission_CheckCreateRecord_Handler,
		},
		{
			MethodName: "CheckSpecificDataPermission",
			Handler:    _Permission_CheckSpecificDataPermission_Handler,
		},
		{
			MethodName: "CheckRelatedRecord",
			Handler:    _Permission_CheckRelatedRecord_Handler,
		},
		{
			MethodName: "CheckDashboardPermission",
			Handler:    _Permission_CheckDashboardPermission_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "service.proto",
}
